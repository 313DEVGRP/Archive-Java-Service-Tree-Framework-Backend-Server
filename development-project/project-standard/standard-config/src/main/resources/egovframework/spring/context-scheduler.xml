<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="schedulerSampleService1"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="SampleService1" />
		<property name="targetMethod" value="insertEmployee" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="schedulerSampleService1Trigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="schedulerSampleService1" />
		<!-- 시작하고 1분후에 실행한다. (milisecond) -->
		<property name="startDelay" value="60000" />
		<!-- 매 60분마다 실행한다. (milisecond) 데몬 형식으로 계속 기동 중 -->
		<property name="repeatInterval" value="3600000000" />
		<!-- CRON과 같이 시각을 지정하는 경우 다음 참조 -->
		<!-- 
		<property name="cronExpression" value="0 0 6 * * ?" />
		-->
	</bean>

	<bean id="shceduleSampleService3"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="SampleService3" />
		<property name="targetMethod" value="insertSmple" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="shceduleSampleService3Trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="shceduleSampleService3" />
		<!-- CRON과 같이 시각을 지정하는 경우 다음 참조 -->
		<property name="cronExpression" value="0 * * * * ?" />
	</bean>

	<bean id="jobDetailBean" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="egovframework.oe1.sms.sample.service.EgovOe1ScheduleSample2" />
		<property name="jobDataAsMap">
			<map>
				<entry key="name" value="JobDetail" />
			</map>
		</property>
	</bean>

	<bean id="jobDetailBeanTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="jobDetailBean" />
		<!-- 시작하고 1분후에 실행한다. (milisecond) -->
		<property name="startDelay" value="70000" />
		<!-- 매 60분마다 실행한다. (milisecond) 데몬 형식으로 계속 기동 중 -->
		<property name="repeatInterval" value="7200000000" />
	</bean>

	<bean id="SchedulerFactory"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">3</prop>
			</props>
		</property>

		<property name="triggers">
			<list>
				<ref bean="schedulerSampleService1Trigger" />
				<ref bean="shceduleSampleService3Trigger" />
				<ref bean="jobDetailBeanTrigger" />
			</list>
		</property>
		
    	<property name="globalTriggerListeners" ref="globalTriggerListener"/>
    	<property name="globalJobListeners" ref="globalJobListeners"/>
	</bean>
	
	<bean id="globalTriggerListener" 
      class="egovframework.oe1.sms.schedule.service.EgovOe1SmsGlobalTriggerListener">
    	<property name="listenerType" value="Global"/>
	</bean>

	<bean id="globalJobListeners" class="egovframework.oe1.sms.schedule.service.EgovOe1SmsGlobalJobListener">
		<property name="listenerType" value="Global"/>
	</bean>

</beans>
