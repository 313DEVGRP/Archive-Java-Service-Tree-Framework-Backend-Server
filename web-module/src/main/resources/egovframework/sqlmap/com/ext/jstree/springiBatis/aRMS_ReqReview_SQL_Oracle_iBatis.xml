<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="arms-reqreview">
    <typeAlias alias="ComprehensiveTree"
               type="egovframework.com.ext.jstree.springiBatis.core.vo.ComprehensiveTree" />

    <statement id="ddlExecute" parameterClass="ComprehensiveTree">
        CREATE TABLE $c_title$(
            C_ID NUMBER NOT NULL,
            C_PARENTID NUMBER NOT NULL,
            C_POSITION NUMBER NOT NULL,
            C_LEFT NUMBER NOT NULL,
            C_RIGHT NUMBER NOT NULL,
            C_LEVEL NUMBER NOT NULL,
            C_TITLE VARCHAR2(4000 BYTE),
            C_TYPE VARCHAR2(4000 BYTE),

            c_review_pdservice_link NUMBER,
            c_review_pdservice_name VARCHAR2(4000 BYTE),

            c_review_version_link NUMBER,
            c_review_version_name VARCHAR2(4000 BYTE),

            c_review_jira_link NUMBER,
            c_review_jira_name VARCHAR2(4000 BYTE),

            c_review_req_link NUMBER,
            c_review_req_name VARCHAR2(4000 BYTE),

            c_review_sender VARCHAR2(4000 BYTE),
            c_review_responder VARCHAR2(4000 BYTE),

            c_review_creat_date VARCHAR2(4000 BYTE),
            c_review_comment VARCHAR2(4000 BYTE),

            c_review_result_state VARCHAR2(4000 BYTE),
            c_review_result_date VARCHAR2(4000 BYTE),

            CONSTRAINT $c_title$_PK PRIMARY KEY (C_ID)
        /*
        * CONSTRAINT T_ARMS_REQADD_FK1 FOREIGN KEY (OTHER_ID) REFERENCES OTHER T_ARMS_REQADD(C_ID) ON DELETE CASCADE
        */)
    </statement >

    <statement id="ddlSequenceExecute" parameterClass="ComprehensiveTree">
        /*
        * 인덱스는 되도록 걸지 말것.
        * CREATE UNIQUE INDEX I_COMPREHENSIVETREE ON T_ARMS_REQADD
        * ("C_ID" ASC)
        */
        /*
        * DROP SEQUENCE S_ARMS_REQADD;
        */
        CREATE SEQUENCE S_$c_title$
        START WITH 10
        MAXVALUE 999999999999999999999999999
        MINVALUE 0
        NOCYCLE
        CACHE 20
        NOORDER
    </statement >

    <statement id="ddlExecute_comment_1" parameterClass="ComprehensiveTree">
        COMMENT ON TABLE $c_title$ IS '기본 트리 스키마'
    </statement >
    <statement id="ddlExecute_comment_2" parameterClass="ComprehensiveTree">
        COMMENT ON COLUMN $c_title$.C_ID IS '노드 아이디'
    </statement >
    <statement id="ddlExecute_comment_3" parameterClass="ComprehensiveTree">
        COMMENT ON COLUMN $c_title$.C_PARENTID IS '부모 노드 아이디'
    </statement >
    <statement id="ddlExecute_comment_4" parameterClass="ComprehensiveTree">
        COMMENT ON COLUMN $c_title$.C_POSITION IS '노드 포지션'
    </statement >
    <statement id="ddlExecute_comment_5" parameterClass="ComprehensiveTree">
        COMMENT ON COLUMN $c_title$.C_LEFT IS '노드 좌측 끝 포인트'
    </statement >
    <statement id="ddlExecute_comment_6" parameterClass="ComprehensiveTree">
        COMMENT ON COLUMN $c_title$.C_RIGHT IS '노드 우측 끝 포인트'
    </statement >
    <statement id="ddlExecute_comment_7" parameterClass="ComprehensiveTree">
        COMMENT ON COLUMN $c_title$.C_LEVEL IS '노드 DEPTH'
    </statement >
    <statement id="ddlExecute_comment_8" parameterClass="ComprehensiveTree">
        COMMENT ON COLUMN $c_title$.C_TITLE IS '노드 명'
    </statement >
    <statement id="ddlExecute_comment_9" parameterClass="ComprehensiveTree">
        COMMENT ON COLUMN $c_title$.C_TYPE IS '노드 타입'
    </statement >

    <statement id="dmlExecute_1" parameterClass="ComprehensiveTree">
        Insert into $c_title$ (C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE)
        Values (1, 0, 0, 1, 4, 0, 'REQADD', 'root')
    </statement>
    <statement id="dmlExecute_2" parameterClass="ComprehensiveTree">
        Insert into $c_title$ (C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE)
        Values (2, 1, 0, 2, 3, 1, '요구사항', 'drive')
    </statement>

    <statement id="ddlLogExecute" parameterClass="ComprehensiveTree">
        CREATE TABLE $c_title$_LOG(
            C_ID NUMBER NOT NULL,
            C_PARENTID NUMBER NOT NULL,
            C_POSITION NUMBER NOT NULL,
            C_LEFT NUMBER NOT NULL,
            C_RIGHT NUMBER NOT NULL,
            C_LEVEL NUMBER NOT NULL,
            C_TITLE VARCHAR2(4000 BYTE),
            C_TYPE VARCHAR2(4000 BYTE),
            C_METHOD VARCHAR2(4000 BYTE),
            C_STATE VARCHAR2(4000 BYTE),
            C_DATE DATE NOT NULL,

            c_review_pdservice_link NUMBER,
            c_review_pdservice_name VARCHAR2(4000 BYTE),

            c_review_version_link NUMBER,
            c_review_version_name VARCHAR2(4000 BYTE),

            c_review_jira_link NUMBER,
            c_review_jira_name VARCHAR2(4000 BYTE),

            c_review_req_link NUMBER,
            c_review_req_name VARCHAR2(4000 BYTE),

            c_review_sender VARCHAR2(4000 BYTE),
            c_review_responder VARCHAR2(4000 BYTE),

            c_review_creat_date VARCHAR2(4000 BYTE),
            c_review_comment VARCHAR2(4000 BYTE),

            c_review_result_state VARCHAR2(4000 BYTE),
            c_review_result_date VARCHAR2(4000 BYTE)
        )
    </statement>
    <statement id="ddlLogExecute_comment_1" parameterClass="ComprehensiveTree">
      COMMENT ON TABLE $c_title$_LOG IS '기본 트리 스키마 트리거 로그'
    </statement>
    <statement id="ddlLogExecute_comment_2" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_ID IS '노드 아이디'
    </statement>
    <statement id="ddlLogExecute_comment_3" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_PARENTID IS '부모 노드 아이디'
    </statement>
    <statement id="ddlLogExecute_comment_4" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_POSITION IS '노드 포지션'
    </statement>
    <statement id="ddlLogExecute_comment_5" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_LEFT IS '노드 좌측 끝 포인트'
    </statement>
    <statement id="ddlLogExecute_comment_6" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_RIGHT IS '노드 우측 끝 포인트'
    </statement>
    <statement id="ddlLogExecute_comment_7" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_LEVEL IS '노드 DEPTH '
    </statement>
    <statement id="ddlLogExecute_comment_8" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_TITLE IS '노드 명'
    </statement>
    <statement id="ddlLogExecute_comment_9" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_TYPE IS '노드 타입'
    </statement>
    <statement id="ddlLogExecute_comment_10" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_METHOD IS '노드 변경 행위'
    </statement>
    <statement id="ddlLogExecute_comment_11" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_STATE IS '노드 상태값 ( 이전인지. 이후인지)'
    </statement>
    <statement id="ddlLogExecute_comment_12" parameterClass="ComprehensiveTree">
      COMMENT ON COLUMN $c_title$_LOG.C_DATE IS '노드 변경 시'
    </statement>

    <select id="isExistTable" parameterClass="ComprehensiveTree" resultClass="int">
        /* getChildCountByParentId */
        select count(*) from all_tables where table_name = #c_title#
    </select>
</sqlMap>